{
  "version": 3,
  "sources": ["../../export-from-json/dist/esm/utils.js", "../../export-from-json/dist/esm/processors.js", "../../export-from-json/dist/esm/converters.js", "../../export-from-json/dist/esm/types.js", "../../export-from-json/dist/esm/exportFromJSON.js", "../../export-from-json/dist/esm/index.js"],
  "sourcesContent": ["export function isArray(data) {\r\n    return Object.prototype.toString.call(data) === '[object Array]';\r\n}\r\nexport function assert(condition, msg) {\r\n    if (!condition)\r\n        throw new Error(msg);\r\n}\r\nexport function getValues(data) {\r\n    return Object.keys(data).map(function (key) { return data[key]; });\r\n}\r\nexport function getKeys(data) {\r\n    return Object.keys(data);\r\n}\r\nexport function getEntries(data) {\r\n    return Object.keys(data).map(function (key) { return [key, data[key]]; });\r\n}\r\nexport function normalizeFileName(fileName, extension, fileNameFormatter) {\r\n    var suffix = '.' + extension;\r\n    var extensionPattern = new RegExp(\"(\\\\\".concat(extension, \")?$\"));\r\n    return fileNameFormatter(fileName).replace(extensionPattern, suffix);\r\n}\r\nexport function normalizeXMLName(name) {\r\n    '555xmlHello .  world!'.trim().replace(/^([0-9,;]|(xml))+/, '');\r\n    return name.replace(/[^_a-zA-Z 0-9:\\-\\.]/g, '').replace(/^([ 0-9-:\\-\\.]|(xml))+/i, '').replace(/ +/g, '-');\r\n}\r\nexport function indent(spaces) {\r\n    return Array(spaces + 1).join(' ');\r\n}\r\nexport function stripHTML(text) {\r\n    return text.replace(/([<>&])/g, function (_, $1) {\r\n        switch ($1) {\r\n            case '<': return '&lt;';\r\n            case '>': return '&gt;';\r\n            case '&': return '&amp;';\r\n            default: return '';\r\n        }\r\n    });\r\n}\r\n", "export function generateDataURI(content, type, byBlob) {\r\n    switch (type) {\r\n        case 'txt': {\r\n            var blobType = 'text/plain;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'css': {\r\n            var blobType = 'text/css;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'html': {\r\n            var blobType = 'text/html;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'json': {\r\n            var blobType = 'text/json;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'csv': {\r\n            var blobType = 'text/csv;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'xls': {\r\n            var blobType = 'text/application/vnd.ms-excel;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        case 'xml': {\r\n            var blobType = 'text/application/xml;charset=utf-8';\r\n            if (byBlob)\r\n                return URL.createObjectURL(new Blob([content], { type: blobType }));\r\n            return \"data:,\".concat(blobType) + encodeURIComponent(content);\r\n        }\r\n        default: {\r\n            return '';\r\n        }\r\n    }\r\n}\r\nexport function downloadFile(content, type, fileName, byBlob) {\r\n    if (fileName === void 0) { fileName = 'download'; }\r\n    if (byBlob === void 0) { byBlob = true; }\r\n    var dataURI = generateDataURI(content, type, byBlob);\r\n    var anchor = document.createElement('a');\r\n    anchor.href = dataURI;\r\n    anchor.download = fileName;\r\n    anchor.setAttribute('style', 'visibility:hidden');\r\n    document.body.appendChild(anchor);\r\n    anchor.dispatchEvent(new MouseEvent('click', {\r\n        bubbles: false,\r\n        cancelable: false,\r\n        view: window,\r\n    }));\r\n    document.body.removeChild(anchor);\r\n}\r\n", "var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nimport { isArray, getEntries, normalizeXMLName, indent, stripHTML, assert, getKeys } from './utils.js';\r\nexport function _createFieldsMapper(fields) {\r\n    if (!fields\r\n        || isArray(fields) && !fields.length\r\n        || !isArray(fields) && !getKeys(fields).length)\r\n        return function (item) { return item; };\r\n    var mapper = isArray(fields)\r\n        ? fields.reduce(function (map, key) {\r\n            var _a;\r\n            return (__assign(__assign({}, map), (_a = {}, _a[key] = key, _a)));\r\n        }, Object.create(null))\r\n        : fields;\r\n    return function (item) {\r\n        if (isArray(item)) {\r\n            return item\r\n                .map(function (i) { return getEntries(i).reduce(function (map, _a) {\r\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n                if (key in mapper) {\r\n                    map[mapper[key]] = value;\r\n                }\r\n                return map;\r\n            }, Object.create(null)); })\r\n                .filter(function (i) { return getKeys(i).length; });\r\n        }\r\n        return getEntries(item).reduce(function (map, _a) {\r\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n            if (key in mapper) {\r\n                map[mapper[key]] = value;\r\n            }\r\n            return map;\r\n        }, Object.create(null));\r\n    };\r\n}\r\nexport function _prepareData(data) {\r\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide a valid JSON';\r\n    try {\r\n        return (typeof data === 'string' ? JSON.parse(data) : data);\r\n    }\r\n    catch (_a) {\r\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\r\n    }\r\n}\r\nexport function _createJSONData(data, replacer, space) {\r\n    if (replacer === void 0) { replacer = null; }\r\n    var MESSAGE_VALID_JSON_FAIL = 'Invalid export data. Please provide valid JSON object';\r\n    try {\r\n        return JSON.stringify(data, replacer, space);\r\n    }\r\n    catch (_a) {\r\n        throw new Error(MESSAGE_VALID_JSON_FAIL);\r\n    }\r\n}\r\nexport function _createTableMap(data) {\r\n    return data.map(getEntries).reduce(function (tMap, rowKVs, rowIndex) {\r\n        return rowKVs.reduce(function (map, _a) {\r\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n            var columnValues = map[key] || Array.from({ length: data.length }).map(function (_) { return ''; });\r\n            columnValues[rowIndex] =\r\n                (typeof value !== 'string' ? JSON.stringify(value) : value) || '';\r\n            map[key] = columnValues;\r\n            return map;\r\n        }, tMap);\r\n    }, Object.create(null));\r\n}\r\nexport function _createTableEntries(tableMap, beforeTableEncode) {\r\n    if (beforeTableEncode === void 0) { beforeTableEncode = function (i) { return i; }; }\r\n    return beforeTableEncode(getEntries(tableMap).map(function (_a) {\r\n        var _b = __read(_a, 2), fieldName = _b[0], fieldValues = _b[1];\r\n        return ({\r\n            fieldName: fieldName,\r\n            fieldValues: fieldValues,\r\n        });\r\n    }));\r\n}\r\nfunction encloser(value, delimiter) {\r\n    var enclosingTester = new RegExp(\"\".concat(delimiter, \"|\\\"|\\n\"));\r\n    var enclosingCharacter = enclosingTester.test(value) ? '\"' : '';\r\n    var escaped = value.replace(/\"/g, '\"\"');\r\n    return \"\".concat(enclosingCharacter).concat(escaped).concat(enclosingCharacter);\r\n}\r\nvar defaultCreateCSVDataOption = { beforeTableEncode: function (i) { return i; }, delimiter: ',' };\r\nexport function createCSVData(data, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var _a = __assign(__assign({}, defaultCreateCSVDataOption), options), beforeTableEncode = _a.beforeTableEncode, delimiter = _a.delimiter;\r\n    if (!data.length)\r\n        return '';\r\n    var tableMap = _createTableMap(data);\r\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\r\n    var head = tableEntries.map(function (_a) {\r\n        var fieldName = _a.fieldName;\r\n        return fieldName;\r\n    }).join(delimiter) + '\\r\\n';\r\n    var columns = tableEntries.map(function (_a) {\r\n        var fieldValues = _a.fieldValues;\r\n        return fieldValues;\r\n    })\r\n        .map(function (column) { return column.map(function (value) { return encloser(value, delimiter); }); });\r\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn.map(function (value, rowIndex) { return \"\".concat(value).concat(delimiter).concat(column[rowIndex]); }); });\r\n    return head + rows.join('\\r\\n');\r\n}\r\nexport function _renderTableHTMLText(data, beforeTableEncode) {\r\n    assert(data.length > 0);\r\n    var tableMap = _createTableMap(data);\r\n    var tableEntries = _createTableEntries(tableMap, beforeTableEncode);\r\n    var head = tableEntries.map(function (_a) {\r\n        var fieldName = _a.fieldName;\r\n        return fieldName;\r\n    })\r\n        .join('</b></th><th><b>');\r\n    var columns = tableEntries.map(function (_a) {\r\n        var fieldValues = _a.fieldValues;\r\n        return fieldValues;\r\n    })\r\n        .map(function (column) { return column.map(function (value) { return \"<td>\".concat(value, \"</td>\"); }); });\r\n    var rows = columns.reduce(function (mergedColumn, column) { return mergedColumn\r\n        .map(function (value, rowIndex) { return \"\".concat(value).concat(column[rowIndex]); }); });\r\n    return \"\\n    <table>\\n      <thead>\\n        <tr><th><b>\".concat(head, \"</b></th></tr>\\n      </thead>\\n      <tbody>\\n        <tr>\").concat(rows.join(\"</tr>\\n        <tr>\"), \"</tr>\\n      </tbody>\\n    </table>\\n  \");\r\n}\r\nvar defaultCreateXLSDataOptions = { beforeTableEncode: function (i) { return i; } };\r\nexport function createXLSData(data, options) {\r\n    var beforeTableEncode = __assign(__assign({}, defaultCreateXLSDataOptions), options).beforeTableEncode;\r\n    if (!data.length)\r\n        return '';\r\n    var content = \"<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n  </head >\\n  <body>\\n    \".concat(_renderTableHTMLText(data, beforeTableEncode), \"\\n  </body>\\n</html >\\n\");\r\n    return content;\r\n}\r\nexport function createXMLData(data) {\r\n    var content = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><!DOCTYPE base>\\n\".concat(_renderXML(data, 'base'), \"\\n\");\r\n    return content;\r\n}\r\nfunction _renderXML(data, tagName, arrayElementTag, spaces) {\r\n    if (arrayElementTag === void 0) { arrayElementTag = 'element'; }\r\n    if (spaces === void 0) { spaces = 0; }\r\n    var tag = normalizeXMLName(tagName);\r\n    var indentSpaces = indent(spaces);\r\n    if (data === null || data === undefined) {\r\n        return \"\".concat(indentSpaces, \"<\").concat(tag, \" />\");\r\n    }\r\n    var content = isArray(data)\r\n        ? data.map(function (item) { return _renderXML(item, arrayElementTag, arrayElementTag, spaces + 2); }).join('\\n')\r\n        : typeof data === 'object'\r\n            ? getEntries(data)\r\n                .map(function (_a) {\r\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n                return _renderXML(value, key, arrayElementTag, spaces + 2);\r\n            }).join('\\n')\r\n            : indentSpaces + '  ' + stripHTML(String(data));\r\n    var contentWithWrapper = \"\".concat(indentSpaces, \"<\").concat(tag, \">\\n\").concat(content, \"\\n\").concat(indentSpaces, \"</\").concat(tag, \">\");\r\n    return contentWithWrapper;\r\n}\r\n", "export var exportTypes = {\r\n    txt: 'txt',\r\n    css: 'css',\r\n    html: 'html',\r\n    json: 'json',\r\n    csv: 'csv',\r\n    xls: 'xls',\r\n    xml: 'xml',\r\n};\r\n", "import { assert, isArray, normalizeFileName } from './utils.js';\r\nimport { downloadFile } from './processors.js';\r\nimport { _prepareData, _createJSONData, createCSVData, createXLSData, createXMLData, _createFieldsMapper } from './converters.js';\r\nimport { exportTypes } from './types.js';\r\nfunction exportFromJSON(_a) {\r\n    var data = _a.data, _b = _a.fileName, fileName = _b === void 0 ? 'download' : _b, extension = _a.extension, _c = _a.fileNameFormatter, fileNameFormatter = _c === void 0 ? function (name) { return name.replace(/\\s+/, '_'); } : _c, fields = _a.fields, _d = _a.exportType, exportType = _d === void 0 ? 'txt' : _d, _e = _a.replacer, replacer = _e === void 0 ? null : _e, _f = _a.space, space = _f === void 0 ? 4 : _f, _g = _a.processor, processor = _g === void 0 ? downloadFile : _g, _h = _a.withBOM, withBOM = _h === void 0 ? false : _h, _j = _a.beforeTableEncode, beforeTableEncode = _j === void 0 ? function (i) { return i; } : _j, _k = _a.delimiter, delimiter = _k === void 0 ? ',' : _k;\r\n    var MESSAGE_IS_ARRAY_FAIL = 'Invalid export data. Please provide an array of objects';\r\n    var MESSAGE_UNKNOWN_EXPORT_TYPE = \"Can't export unknown data type \".concat(exportType, \".\");\r\n    var MESSAGE_FIELD_INVALID = \"Can't export string data to \".concat(exportType, \".\");\r\n    if (typeof data === 'string') {\r\n        switch (exportType) {\r\n            case 'txt':\r\n            case 'css':\r\n            case 'html': {\r\n                return processor(data, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\r\n            }\r\n            default:\r\n                throw new Error(MESSAGE_FIELD_INVALID);\r\n        }\r\n    }\r\n    var fieldsMapper = _createFieldsMapper(fields);\r\n    var safeData = fieldsMapper(_prepareData(data));\r\n    var JSONData = _createJSONData(safeData, replacer, space);\r\n    switch (exportType) {\r\n        case 'txt':\r\n        case 'css':\r\n        case 'html': {\r\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : exportType, fileNameFormatter));\r\n        }\r\n        case 'json': {\r\n            return processor(JSONData, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'json', fileNameFormatter));\r\n        }\r\n        case 'csv': {\r\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\r\n            var BOM = '\\ufeff';\r\n            var CSVData = createCSVData(safeData, { beforeTableEncode: beforeTableEncode, delimiter: delimiter });\r\n            var content = withBOM ? BOM + CSVData : CSVData;\r\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'csv', fileNameFormatter));\r\n        }\r\n        case 'xls': {\r\n            assert(isArray(safeData), MESSAGE_IS_ARRAY_FAIL);\r\n            var content = createXLSData(safeData, { beforeTableEncode: beforeTableEncode });\r\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xls', fileNameFormatter));\r\n        }\r\n        case 'xml': {\r\n            var content = createXMLData(safeData);\r\n            return processor(content, exportType, normalizeFileName(fileName, extension !== null && extension !== void 0 ? extension : 'xml', fileNameFormatter));\r\n        }\r\n        default:\r\n            throw new Error(MESSAGE_UNKNOWN_EXPORT_TYPE);\r\n    }\r\n}\r\nexportFromJSON.types = exportTypes;\r\nexportFromJSON.processors = { downloadFile: downloadFile };\r\nexport default exportFromJSON;\r\n", "import exportFromJSON from './exportFromJSON.js';\r\nexport default exportFromJSON;\r\n"],
  "mappings": "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",
  "names": ["_a"]
}
